"""
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def main():
    #print(even_fibonacci(1, 1))
    gen = fibonacci_gen()
    even_fib_sum = 0
    while True:
        x = next(gen)
        if x <= 4000000:
            if x % 2 == 0:
                even_fib_sum += x
        else:
            break
    print(even_fib_sum)

# def even_fibonacci(a, b):
#     c = a + b
#     if c <= 4000000:
#         if c % 2 == 0:
#             return c + even_fibonacci(b, c)
#         else:
#             return even_fibonacci(b, c)
#     else:
#         return 0


def fibonacci_gen():
    curr, prev = 1, 1
    while True:
        yield curr
        curr = curr + prev
        prev = curr - prev


if __name__ == "__main__":
    main()